<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:wmq="http://www.mulesoft.org/schema/mule/ee/wmq" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/wmq http://www.mulesoft.org/schema/mule/ee/wmq/current/mule-wmq-ee.xsd">
    <!-- HTTP configuration for listening to requests at port 8081 -->
    <http:listener-config name="employee_details-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="employee_details-config" raml="employee_details.raml" consoleEnabled="false" doc:name="Router"/>
    <!-- Database configuration -->
    <db:mysql-config name="MySQL_Configuration" host="127.0.0.1" port="3306" user="root" password="lion123" database="OMIC" doc:name="MySQL Configuration"/>
    <!-- REST API to get employee details for the given employee ID in JSON response  -->
    <flow name="GET_EMPLOYEE_DETAILS">
        <http:listener config-ref="employee_details-httpListenerConfig" path="/employee/1.0/{employeeid}" doc:name="HTTP" allowedMethods="GET"/>
        <db:select config-ref="MySQL_Configuration" doc:name="ocim_employee">
            <db:parameterized-query><![CDATA[select * from employee_Details WHERE id = #[message.inboundProperties.'http.uri.params'.employeeid]]]></db:parameterized-query>
        </db:select>
        <!-- Mapping employee details from database to JSON response -->
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    
     <!-- REST API to store employee details in DB and return newly generated employee ID in JSON response  -->
    <flow name="employee_details-console">
        <http:listener config-ref="employee_details-httpListenerConfig" path="/employee/1.0" doc:name="HTTP" allowedMethods="POST">
            <http:response-builder statusCode="200"/>
        </http:listener>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <db:insert config-ref="MySQL_Configuration" doc:name="Database" autoGeneratedKeys="true" autoGeneratedKeysColumnNames="id" autoGeneratedKeysColumnIndexes="1">
            <db:parameterized-query><![CDATA[insert into employee_details (name, age, city) values(#[payload.Name], #[payload.Age], #[payload.City])]]></db:parameterized-query>
        </db:insert>
        <!-- Returning newly generated employee Id  as JSON response-->
        <set-payload value="#[{'EmployeeId':#[payload[0].GENERATED_KEY]}]" doc:name="Set Payload"/>
        <json:object-to-json-transformer mimeType="text/json" doc:name="Object to JSON"/>
    </flow>
</mule>
